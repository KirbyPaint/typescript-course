{"version":3,"sources":["src/models/user.ts","src/index.ts"],"names":[],"mappings":";;;;;;ACAA,IAAA,MAAA,GAAA,OAAA,CAAA,eAAA,CAAA;ADOA,IAAA,IAAA,GAAA,YAAA;ACLA,ADQE,ICRI,IAAI,GAAG,ADQX,ICRe,ADQf,CAAoB,IAApB,CCRe,CAAA,ADQoB,ICRxB,CAAS,EAAT,CAAb;AAEA,ADMsB,ICNlB,CAAC,EAAL,CAAQ,CDMc,IAAA,GCNtB,ADMsB,ECNJ,EDMI,UCNJ;AAChB,ADGA,ECHA,OAAO,ADGP,CCHQ,GAAR,CAAY,CDGZ,GAAwC,EAAxC,ICHA;AACD,ADIwC,CCNzC;AAGA,IAAI,CAAC,EAAL,CAAQ,QAAR,EAAkB,YAAA;AAChB,ADIA,ECJA,ADIA,IAAA,CAAA,ECJO,CAAC,GAAR,CAAY,EDIZ,CAAA,GAAA,GAAA,CCJA,SDII,QAAJ,EAAoB;ACHrB,ADIG,CCNJ,UDMW,KAAK,IAAL,CAAU,QAAV,CAAP;ACHJ,ADIG,GAFD,CCFE,CAAC,EAAL,CAAQ,MAAR,EAAgB,YAAA;AACd,EAAA,OAAO,CAAC,GAAR,CAAY,oBAAZ;AACD,ADIC,CCNF,CDME,IAAA,CAAA,SAAA,CAAA,GAAA,GAAA,UAAI,MAAJ,EAAqB;ACFvB,ADGI,ICHA,ADGA,CCHC,KDGK,CAAC,CCHX,CAAa,IDGT,CAAc,GCHlB,EDGuB,IAAnB,EAAyB,MAAzB;ACFJ,ADGG,GAFD,CCDE,CAAC,OAAL,CAAa,MAAb;AACA,IAAI,CAAC,OAAL,CAAa,SAAb;ADIE,EAAA,IAAA,CAAA,SAAA,CAAA,EAAA,GAAA,UAAG,SAAH,EAAsB,QAAtB,EAAwC;AACtC,QAAM,QAAQ,GAAG,KAAK,MAAL,CAAY,SAAZ,KAA0B,EAA3C;AACA,IAAA,QAAQ,CAAC,IAAT,CAAc,QAAd;AACA,SAAK,MAAL,CAAY,SAAZ,IAAyB,QAAzB;AACD,GAJD;;AAMA,EAAA,IAAA,CAAA,SAAA,CAAA,OAAA,GAAA,UAAQ,SAAR,EAAyB;AACvB,QAAM,QAAQ,GAAG,KAAK,MAAL,CAAY,SAAZ,CAAjB;;AAEA,QAAI,CAAC,QAAD,IAAa,QAAQ,CAAC,MAAT,KAAoB,CAArC,EAAwC;AACtC;AACD;;AAED,IAAA,QAAQ,CAAC,OAAT,CAAiB,UAAC,QAAD,EAAS;AACxB,MAAA,QAAQ;AACT,KAFD;AAGD,GAVD;;AAWF,SAAA,IAAA;AA9BA,CAAA,EAAA;;AAAa,OAAA,CAAA,IAAA,GAAA,IAAA;AAgCb,IAAI,IAAJ,CAAS;AAAE,EAAA,IAAI,EAAE,MAAR;AAAgB,EAAA,GAAG,EAAE;AAArB,CAAT","file":"src.f10117fe.js","sourceRoot":"..","sourcesContent":["interface UserProps {\n  name?: string;\n  age?: number;\n}\n\ntype Callback = () => void;\n\nexport class User {\n  events: { [key: string]: Callback[] } = {};\n\n  constructor(private data: UserProps) {}\n\n  get(propName: string): number | string {\n    return this.data[propName];\n  }\n\n  set(update: UserProps): void {\n    Object.assign(this.data, update);\n  }\n\n  on(eventName: string, callback: Callback) {\n    const handlers = this.events[eventName] || [];\n    handlers.push(callback);\n    this.events[eventName] = handlers;\n  }\n\n  trigger(eventName: string): void {\n    const handlers = this.events[eventName];\n\n    if (!handlers || handlers.length === 0) {\n      return;\n    }\n\n    handlers.forEach((callback) => {\n      callback();\n    });\n  }\n}\n\nnew User({ name: \"name\", age: 20 });\n","import { User } from \"./models/user\";\n\nconst user = new User({});\n\nuser.on(\"change\", () => {\n  console.log(\"change 1\");\n});\nuser.on(\"change\", () => {\n  console.log(\"change 2\");\n});\nuser.on(\"test\", () => {\n  console.log(\"save was triggered\");\n});\n\nuser.trigger(\"change\");\nuser.trigger(\"test\");\nuser.trigger(\"nothing\");\n"]}